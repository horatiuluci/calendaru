{"version":3,"sources":["webpack:///src/app/auth/auth-routing.module.ts","webpack:///src/app/auth/auth.module.ts","webpack:///src/app/auth/auth.page.ts","webpack:///src/app/auth/auth.page.html"],"names":["routes","path","component","AuthPageRoutingModule","forChild","imports","exports","AuthPageModule","declarations","AuthPage","formBuilder","authService","userForm","group","username","required","password","logout","invalid","login","value","selector","templateUrl","styleUrls"],"mappings":"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","file":"auth-auth-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { AuthPage } from './auth.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AuthPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AuthPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MaterialModule } from '../material.module';\r\n\r\nimport { AuthPageRoutingModule } from './auth-routing.module';\r\nimport { AuthPage } from './auth.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MaterialModule,\r\n    AuthPageRoutingModule\r\n  ],\r\n  declarations: [AuthPage]\r\n})\r\nexport class AuthPageModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Component({\r\n  selector: 'app-auth',\r\n  templateUrl: './auth.page.html',\r\n  styleUrls: ['./auth.page.scss'],\r\n})\r\nexport class AuthPage implements OnInit {\r\n  userForm: any;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private authService: AuthService\r\n  ) {\r\n    this.userForm = this.formBuilder.group({\r\n      username: ['', Validators.required],\r\n      password: ['', Validators.required],\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.authService.logout();\r\n  }\r\n\r\n  login() {\r\n    if (this.userForm.invalid) {\r\n      return;\r\n    }\r\n    this.authService.login(this.userForm.value.username, this.userForm.value.password);\r\n  }\r\n}\r\n","<br><br><br><br><br><br><br>\r\n\r\n<mat-card class=\"my-card\">\r\n  <form [formGroup]=\"userForm\" (ngSubmit)=\"login()\" autocomplete=\"off\">\r\n\r\n    <mat-form-field>\r\n      <mat-label>Username</mat-label>\r\n      <input matInput formControlName=\"username\" id=\"username\" placeholder=\"Username\">\r\n      <mat-error *ngIf=\"userForm.get('username').touched && userForm.get('username').hasError('required')\">Required</mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field>\r\n      <mat-label>Password</mat-label>\r\n      <input matInput type=\"password\" formControlName=\"password\" id=\"password\" placeholder=\"Password\">\r\n      <mat-error *ngIf=\"userForm.get('password').touched && userForm.get('password').hasError('required')\">Required</mat-error>\r\n    </mat-form-field>\r\n\r\n    <div style=\"text-align: center\">\r\n      <button mat-flat-button color=\"primary\" type=\"submit\" [disabled]=\"userForm.invalid\">Login</button>\r\n    </div>\r\n  </form>\r\n</mat-card>"]}