{"version":3,"sources":["./src/app/auth/auth-routing.module.ts","./src/app/auth/auth.module.ts","./src/app/auth/auth.page.ts","./src/app/auth/auth.page.html"],"names":[],"mappings":"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","file":"auth-auth-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { AuthPage } from './auth.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AuthPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AuthPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MaterialModule } from '../material.module';\r\n\r\nimport { AuthPageRoutingModule } from './auth-routing.module';\r\nimport { AuthPage } from './auth.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MaterialModule,\r\n    AuthPageRoutingModule\r\n  ],\r\n  declarations: [AuthPage]\r\n})\r\nexport class AuthPageModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Component({\r\n  selector: 'app-auth',\r\n  templateUrl: './auth.page.html',\r\n  styleUrls: ['./auth.page.scss'],\r\n})\r\nexport class AuthPage implements OnInit {\r\n  userForm: any;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private authService: AuthService\r\n  ) {\r\n    this.userForm = this.formBuilder.group({\r\n      username: ['', Validators.required],\r\n      password: ['', Validators.required],\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.authService.logout();\r\n  }\r\n\r\n  login() {\r\n    if (this.userForm.invalid) {\r\n      return;\r\n    }\r\n    this.authService.login(this.userForm.value.username, this.userForm.value.password);\r\n  }\r\n}\r\n","<br><br><br><br><br><br><br>\r\n\r\n<mat-card class=\"my-card\">\r\n  <form [formGroup]=\"userForm\" (ngSubmit)=\"login()\" autocomplete=\"off\">\r\n\r\n    <mat-form-field>\r\n      <mat-label>Username</mat-label>\r\n      <input matInput formControlName=\"username\" id=\"username\" placeholder=\"Username\">\r\n      <mat-error *ngIf=\"userForm.get('username').touched && userForm.get('username').hasError('required')\">Required</mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field>\r\n      <mat-label>Password</mat-label>\r\n      <input matInput type=\"password\" formControlName=\"password\" id=\"password\" placeholder=\"Password\">\r\n      <mat-error *ngIf=\"userForm.get('password').touched && userForm.get('password').hasError('required')\">Required</mat-error>\r\n    </mat-form-field>\r\n\r\n    <div style=\"text-align: center\">\r\n      <button mat-flat-button color=\"primary\" type=\"submit\" [disabled]=\"userForm.invalid\">Login</button>\r\n    </div>\r\n  </form>\r\n</mat-card>"],"sourceRoot":"webpack:///"}